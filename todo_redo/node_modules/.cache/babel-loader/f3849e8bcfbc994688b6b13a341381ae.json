{"ast":null,"code":"var _jsxFileName = \"/Users/Johnny/Desktop/MERN_Assignments/todo_list/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport Todo from './components/Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [newList, setNewList] = useState('');\n  const [lists, setLists] = useState([]); //This is the form to make the list possible//\n\n  const handleSubmit = e => {\n    e.preventDefault(); //Condition to prevent User from adding a blank object//\n\n    if (newList.length === 0) {\n      return;\n    } //Combining two parts of state on Todo List: What is the Todo Item and\n    //is it complete//\n\n\n    const listItem = {\n      text: newList,\n      complete: false\n    };\n    setLists([...lists, listItem]);\n    setNewList('');\n  }; //Deleting an object from the list//\n\n\n  const handleDelete = deletId => {\n    const adjustedList = lists.filter((_list, i) => {\n      return i !== deletId;\n    });\n    setLists(adjustedList);\n  }; //Makes a copy of list after checking a todo off//\n\n\n  const checkComplete = checkId => {\n    const completedTodo = lists.map((list, i) => {\n      if (checkId === i) {\n        const completedTodo = { ...list,\n          complete: !list.complete\n        };\n        return completedTodo;\n      }\n\n      return list;\n    });\n    setLists(completedTodo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            setNewList(e.target.value);\n          },\n          value: newList,\n          type: \"text\",\n          class: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        class: \"btn btn-primary\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), lists.map((list, i) => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        index: i,\n        list: list,\n        checkComplete: checkComplete,\n        handleDelete: handleDelete\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"59UCoOm50cK2Lzd9AtpgrVxRt/A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todo","App","newList","setNewList","lists","setLists","handleSubmit","e","preventDefault","length","listItem","text","complete","handleDelete","deletId","adjustedList","filter","_list","i","checkComplete","checkId","completedTodo","map","list","target","value"],"sources":["/Users/Johnny/Desktop/MERN_Assignments/todo_list/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport Todo from './components/Todo';\n\nfunction App() {\n  const [newList, setNewList] = useState('');\n  const [lists, setLists] = useState([]);\n\n  //This is the form to make the list possible//\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    //Condition to prevent User from adding a blank object//\n    if (newList.length === 0) {\n      return;\n    }\n\n    //Combining two parts of state on Todo List: What is the Todo Item and\n    //is it complete//\n    const listItem = {\n      text: newList,\n      complete: false\n    };\n\n    setLists([...lists, listItem]);\n    setNewList('');\n  };\n\n  //Deleting an object from the list//\n\n  const handleDelete = (deletId) => {\n    const adjustedList = lists.filter((_list, i) => {\n      return i !== deletId;\n    });\n    setLists(adjustedList);\n  }\n\n  //Makes a copy of list after checking a todo off//\n\n  const checkComplete = (checkId) => {\n    const completedTodo = lists.map((list, i) => {\n      if (checkId === i) {\n        const completedTodo = { ...list, complete: !list.complete };\n        return completedTodo;\n      }\n      return list;\n    });\n    setLists(completedTodo);\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={ handleSubmit }>\n        <div class=\"mb-3\">\n          <input onChange={(e) => {\n            setNewList(e.target.value);\n          }}\n          value={ newList }\n          type=\"text\" class=\"form-control\"/>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Add</button>\n      </form>\n\n      {lists.map((list, i) => {\n        return <Todo\n        key = { i }\n        index = { i }\n        list = { list }\n        checkComplete = { checkComplete }\n        handleDelete = { handleDelete } \n        />;\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CAFa,CAIb;;EACA,MAAMO,YAAY,GAAIC,CAAD,IAAO;IAC1BA,CAAC,CAACC,cAAF,GAD0B,CAG1B;;IACA,IAAIN,OAAO,CAACO,MAAR,KAAmB,CAAvB,EAA0B;MACxB;IACD,CANyB,CAQ1B;IACA;;;IACA,MAAMC,QAAQ,GAAG;MACfC,IAAI,EAAET,OADS;MAEfU,QAAQ,EAAE;IAFK,CAAjB;IAKAP,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWM,QAAX,CAAD,CAAR;IACAP,UAAU,CAAC,EAAD,CAAV;EACD,CAjBD,CALa,CAwBb;;;EAEA,MAAMU,YAAY,GAAIC,OAAD,IAAa;IAChC,MAAMC,YAAY,GAAGX,KAAK,CAACY,MAAN,CAAa,CAACC,KAAD,EAAQC,CAAR,KAAc;MAC9C,OAAOA,CAAC,KAAKJ,OAAb;IACD,CAFoB,CAArB;IAGAT,QAAQ,CAACU,YAAD,CAAR;EACD,CALD,CA1Ba,CAiCb;;;EAEA,MAAMI,aAAa,GAAIC,OAAD,IAAa;IACjC,MAAMC,aAAa,GAAGjB,KAAK,CAACkB,GAAN,CAAU,CAACC,IAAD,EAAOL,CAAP,KAAa;MAC3C,IAAIE,OAAO,KAAKF,CAAhB,EAAmB;QACjB,MAAMG,aAAa,GAAG,EAAE,GAAGE,IAAL;UAAWX,QAAQ,EAAE,CAACW,IAAI,CAACX;QAA3B,CAAtB;QACA,OAAOS,aAAP;MACD;;MACD,OAAOE,IAAP;IACD,CANqB,CAAtB;IAOAlB,QAAQ,CAACgB,aAAD,CAAR;EACD,CATD;;EAWA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAM,QAAQ,EAAGf,YAAjB;MAAA,wBACE;QAAK,KAAK,EAAC,MAAX;QAAA,uBACE;UAAO,QAAQ,EAAGC,CAAD,IAAO;YACtBJ,UAAU,CAACI,CAAC,CAACiB,MAAF,CAASC,KAAV,CAAV;UACD,CAFD;UAGA,KAAK,EAAGvB,OAHR;UAIA,IAAI,EAAC,MAJL;UAIY,KAAK,EAAC;QAJlB;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAQE;QAAQ,IAAI,EAAC,QAAb;QAAsB,KAAK,EAAC,iBAA5B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAYGE,KAAK,CAACkB,GAAN,CAAU,CAACC,IAAD,EAAOL,CAAP,KAAa;MACtB,oBAAO,QAAC,IAAD;QAEP,KAAK,EAAKA,CAFH;QAGP,IAAI,EAAKK,IAHF;QAIP,aAAa,EAAKJ,aAJX;QAKP,YAAY,EAAKN;MALV,GACCK,CADD;QAAA;QAAA;QAAA;MAAA,QAAP;IAOD,CARA,CAZH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD;;GAtEQjB,G;;KAAAA,G;AAwET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}